////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// Winter War

            case "ATMINE":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_AntiTankMine_ActualContent", false, true);

            break;

            case "AVS36":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_AVS36_ActualContent", false, true);

            break;

            case "F1GRENADE":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_F1Grenade_ActualContent", false, true);

            break;

            case "KASAPANOS":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_Kasapanos_FactoryIssue_ActualContent", false, true);

            break;

            case "KASAPANOS2":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_Kasapanos_Improvised_ActualContent", false, true);

            break;

            case "KP31":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_KP31_ActualContent", false, true);

            break;

            case "L35":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_L35_ActualContent", false, true);

            break;

            case "LAHTI":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_LahtiSaloranta_ActualContent", false, true);

            break;

            case "LUGER":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_Luger_ActualContent", false, true);

            break;

            case "M20":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_M20_ActualContent", false, true);

            break;

            case "M32":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_M32Grenade_ActualContent", false, true);

            break;

            case "MN27":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_MN27_ActualContent", false, true);

            break;

            case "MN38":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_MN38_ActualContent", false, true);

            break;

            case "MN91":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_MN91_ActualContent", false, true);

            break;

            case "MN9130":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_MN9130_ActualContent", false, true);

            break;

            case "MN9130D":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_MN9130_Dyakonov_ActualContent", false, true);

            break;

            case "MN9130SCOPED":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_MN9130_Scoped_ActualContent", false, true);

            break;

            case "WWMOLOTOV":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_Molotov_ActualContent", false, true);

            break;

            case "NAGANT":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_NagantRevolver_ActualContent", false, true);

            break;

            case "PPD34":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_PPD34_ActualContent", false, true);

            break;

            case "WWRDG1":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_RDG1_ActualContent", false, true);

            break;

            case "RGD33":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_RGD33_ActualContent", false, true);

            break;

            case "WWSATCHEL":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_Satchel_ActualContent", false, true);

            break;

            case "SKIS":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_Skis_ActualContent", false, true);

            break;

            case "SVT38":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_SVT38_ActualContent", false, true);

            break;

            case "WWTT33":
            InvManager.LoadAndCreateInventory("WinterWar.WWWeapon_TT33_ActualContent", false, true);

            break;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// GOM 4

            case "38BODYGUARD":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_38Bodyguard_ActualContent", false, true);

            break;

            case "BARSHOTGUN":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_BarShotgun_ActualContent", false, true);

            break;

            case "M4BAYO":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_Bayonet_M4_ActualContent", false, true);

            break;

            case "M5BAYO":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_Bayonet_M5_ActualContent", false, true);

            break;

            case "M7BAYO":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_Bayonet_M7_ActualContent", false, true);

            break;

            case "BOWIE":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_BowieKnife_ActualContent", false, true);

            break;

            case "CROSSBOW":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_Crossbow_ActualContent", false, true);

            break;

            case "DP27":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_DP27", false, true);

            break;

            case "DPM":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_DPM", false, true);

            break;

            case "GOMK50M":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_K50M_ActualContent", false, true);

            break;

            case "KABAR":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_Kabar_ActualContent", false, true);

            break;

            case "KAR98":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_Kar98k_ActualContent", false, true);

            break;

            case "GOMTRENCH":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_M12_ActualContent", false, true);

            break;

            case "GOMM14":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_M14_ActualContent", false, true);

            break;

            case "M16SCOPED":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_M16A1_Scoped_ActualContent", false, true);

            break;

            case "M16UVC":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_M16A1_UVC", false, true);

            break;

            case "M1897":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_M1897_ActualContent", false, true);

            break;

            case "M18RR":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_M18_Recoilless_ActualContent", false, true);

            break;

            case "GOM1911":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_M1911A1_ActualContent", false, true);

            break;

            case "STOCKLESSM1A1":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_M1A1_Stockless", false, true);

            break;

            case "GARANDNADE":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_M7RifleGrenade_ActualContent", false, true);

            break;

            case "ITHACA":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_M37_ActualContent", false, true);

            break;

            case "ITHACARIOT":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_M37_Riot", false, true);

            break;

            case "M44CARBINE":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_M44_Carbine_ActualContent", false, true);

            break;

            case "GOMMG34":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_MG34_Belt", false, true);

            break;

            case "MAC10":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_MAC10_ActualContent", false, true);

            break;

            case "MAC10SILENCED":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_MAC10_Silenced", false, true);

            break;

            case "P38":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_P38_ActualContent", false, true);

            break;

            case "PPS":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_PPS_ActualContent", false, true);

            break;

            case "RPDSAWNOFF":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_RPD_SawnOff_ActualContent", false, true);

            break;

            case "RPG2":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_RPG2_ActualContent", false, true);

            break;

            case "GOMSKS":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_SKS_ActualContent", false, true);

            break;

            case "GOMSVD":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_SVD_ActualContent", false, true);

            break;

            case "STEVENS":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_Stevens_ActualContent", false, true);

            break;

            case "STONER63":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_Stoner63A_ActualContent", false, true);

            break;

            case "TYPE67QUAD":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_Type67_Quad", false, true);

            break;

            case "UZI":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_UZI_ActualContent", false, true);

            break;

            case "VCGRENADE":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_VCGrenade_ActualContent", false, true);

            break;

            case "VZ23":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_VZ23", false, true);

            break;

            case "VZ25":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_VZ25", false, true);

            break;

            case "VZ58":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_VZ58_ActualContent", false, true);

            break;

            case "VZ61":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_VZ61_ActualContent", false, true);

            break;

            case "XM177E2":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_XM177E2", false, true);

            break;

            case "XM177E230RND":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_XM177E2_30", false, true);

            break;

            case "VCGRENADE":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_VCGrenade_ActualContent", false, true);

            break;

            case "VCGRENADE":
            InvManager.LoadAndCreateInventory("GOM4.GOMWeapon_VCGrenade_ActualContent", false, true);

            break;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// GOM 3

            /*case "RPG2":
            InvManager.LoadAndCreateInventory("GOM3.GOMWeapon_RPG2_ActualContent", false, true);

            break;

            case "RPDSAWNOFF":
            InvManager.LoadAndCreateInventory("GOM3.GOMWeapon_RPD_SawnOff_ActualContent", false, true);

            break;

            case "PPS43":
            InvManager.LoadAndCreateInventory("GOM3.GOMWeapon_PPS_ActualContent", false, true);

            break;

            case "M38CARBINE":
            InvManager.LoadAndCreateInventory("GOM3.GOMWeapon_M38_Carbine_ActualContent", false, true);

            break;

            case "M7RIFLENADE":
            InvManager.LoadAndCreateInventory("GOM3.GOMWeapon_M7RifleGrenade_ActualContent", false, true);

            break;

            case "KAR98K":
            InvManager.LoadAndCreateInventory("GOM3.GOMWeapon_Kar98k_ActualContent", false, true);

            break;

            case "BOWIE":
            InvManager.LoadAndCreateInventory("GOM3.GOMWeapon_BowieKnife_ActualContent", false, true);

            break;

            case "GOMCARBINE":
            InvManager.LoadAndCreateInventory("GOM3.GOMWeapon_M1_Carbine_ActualContent", false, true);

            break;*/
            
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// Testing            
            
            default:
            NameValid = "False";
            break;